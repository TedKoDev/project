name: Deploy to EC2

on:
  push:
    branches:
      - deploy # deploy 브랜치에 푸시되면 워크플로우가 실행됩니다.

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # GitHub Actions 러너를 설정합니다.

    steps:
    - uses: actions/checkout@v2 # 소스 코드를 체크아웃합니다.

    - name: Setup Node.js environment
      uses: actions/setup-node@v2
      with:
        node-version: '18.17.1' # Node.js 18.17.1 버전을 사용합니다.

    - name: Build React App
      env: # 빌드 단계에서 환경 변수 설정
        REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
        REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
        REACT_APP_FIREBASE_DB_URL: ${{ secrets.REACT_APP_FIREBASE_DB_URL }}
        REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
        REACT_APP_CLOUDINARY_URL: ${{ secrets.REACT_APP_CLOUDINARY_URL }}
        REACT_APP_CLOUDINARY_PRESET: ${{ secrets.REACT_APP_CLOUDINARY_PRESET }}
      run: |
        yarn install
        yarn build

    - name: Copy to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_PORT }}
        source: "build/" # 빌드된 파일의 위치
        target: "/var/www/html" # EC2에서 애플리케이션을 호스팅할 위치

    - name: Restart Nginx
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_PORT }}
        script: |
          sudo systemctl restart nginx
